let g:syntastic_mode_map = { 'mode': 'active',
                              \ 'active_filetypes': ['javascript', 'php'],
                              \ 'passive_filetypes': [] }

" hookup for pathogen bundle manager
execute pathogen#infect()

" Search for tags up folders back to my home directory
set tags=./tags,tags;$HOME

" Stop searching through node-module folders with CommandT
set wildignore+=*/node_modules/*
set wildignore+=*.pyc
set wildignore+=*.swp,*.meta

" Change leader
let mapleader=',' 

"Don't need compatibility with Vi
set nocompatible

" No need for backup files
set nobackup
set noswapfile

" Omni Complete function
set ofu=syntaxcomplete#Complete

" shortcut for Omni Complete
inoremap <C-space> <C-x><C-o>

" Enable filetypes
filetype on
filetype plugin on
filetype indent on

" Enable syntax highlighting
syntax on

" Write the old file out when switching between files
set autowrite

" Display current cursor position in the lower right corner
set ruler

" Lower lag after typing <Leader>
set timeoutlen=500

" Switch between buffers without saving
set hidden

" this colorscheme for non GUI
colorscheme default

" Set font type and size
set guifont=Monaco:h14

" Tab stuff
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab " convert tab to spaces
set smarttab " Insert tabs on the start of a new line according to shift width, not tabstop

" Show command in bottom right portion of screen
set showcmd

" Show matching parenthesis
set showmatch

" Show line numbers
set number

" Always show the status line
set laststatus=2

" Prefer a slightly higher lineheigt
set linespace=2

" Better line wrapping
set wrap
set textwidth=79
set formatoptions=qrn1

" Set incremental searching
set incsearch

" Highlight searching
set hlsearch

" case insensitive search
set ignorecase
set smartcase

" hide MacVim toolbar by default
set go-=T

" Hard-wrap paragraphs of text
nnoremap <leader>q gqip

" Enable code folding
set foldenable

" Easy clearing of search
nmap <silent> <leader>/ :nohlsearch<CR>

" Hide mouse when typing
set mousehide

" Shortcut to fold tags
nnoremap <leader>ft Vatzf

" Session settings
set sessionoptions=resize,winpos,winsize,buffers,tabpages,folds,curdir,help

"Shortcut for editing  vimrc file in a new tab
nmap <leader>ev :tabedit $MYVIMRC<cr>

"Faster shortcut for commenting. Requires T-Comment plugin
map <leader>c <c-_><c-_>

"Saves time; maps the spacebar to colon
" nmap <space> :

" Source the vimrc file after saving it. This way, you don't have to reload
" Vim to see the changes.
if has("autocmd")
 autocmd bufwritepost .vimrc source $MYVIMRC
endif

" Use visual bell instead of audio bell
set visualbell

" Completions for help
set wildmenu

" Set colorscheme for gui
if has('gui_running')
    colorscheme github
    "set bg=dark
endif
" section jumping for LaTeX
noremap <buffer> <silent> ]] :<c-u>call TexJump2Section( v:count1, '' )<CR>
noremap <buffer> <silent> [[ :<c-u>call TexJump2Section( v:count1, 'b' )<CR>
function! TexJump2Section( cnt, dir )
 let i = 0
 let pat = '^\\\(part\|chapter\|\(sub\)*section\|paragraph\)\>\|\%$\|\%^'
 let flags = 'W' . a:dir
 while i < a:cnt && search( pat, flags ) > 0
   let i = i+1
 endwhile
 let @/ = pat
endfunction

" Word-wrap stuff
set wrap
set linebreak
set nolist  " list disables linebreak
" keep Vim from adding new lines
set textwidth=0
set wrapmargin=0
" keep old textwidth settings
set formatoptions+=l

" change default plugin for filetype tex
let g:tex_flavor = "latex"
